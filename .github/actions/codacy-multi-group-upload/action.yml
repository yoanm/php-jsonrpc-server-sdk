name: TODO
description: TODO

inputs:
  project-token:
    description: Codacy project token for the repository
    required: true
  root:
    description: |
      Base directory to look for group metadata file.
      Codacy only takes care of reports, all of them may be uploaded at once (no need to loop for each reports group)
    required: true

outputs:
  reports:
    description: TODO
    value: ${{ steps.main.outputs.reports-json }}

runs:
  using: "composite"
  steps:
    - name: Build uploader options
      id: build-uploader-options
      uses: actions/github-script@v7
      env:
        ROOT: ${{ inputs.root }}
      with:
        script: |
          const { ROOT } = process.env;
          
          core.info('Build uploader options');

          const {resolve: pathResolve, dirname: pathDirname} = require('path');
          const absoluteRoot = pathResolve(ROOT);

          core.info(`DEBUG absoluteRoot='${absoluteRoot}'`);

          const metadataFileList = [];
          const globber = await glob.create(`${ROOT}/**/.coverage-reports-metadata.json`);
          for await (const fp of globber.globGenerator()) {
            metadataFileList.push(fp)
          }
          
          const files = [];
          
          for (const metadataFile of metadataFileList) {
            const groupDirectory = pathDirname(metadataFile);
            core.startGroup(`Group ${groupDirectory.replace(`${absoluteRoot}/`, '')}`);
            core.debug(`groupDirectory='${groupDirectory}'`);

            const globber = await glob.create(`${groupDirectory}/*-report-[0-99]`);
            for await (const file of globber.globGenerator()) {
              core.info(`Found '${file.replace(`${absoluteRoot}/`, '')}' report`);

              files.push(file);
            }

            core.endGroup();
          }

          core.info(`Files: ${files.join("\n")}`);

          core.setOutput("reports-json", JSON.stringify(files));
          core.setOutput("reports", files.join(','));

    - name: Upload reports
      if: ${{ "" != steps.build-uploader-options.outputs.reports }}
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        coverage-reports: ${{ steps.build-uploader-options.outputs.reports }}
        project-token: ${{ inputs.project-token }}

    - name: No report warning
      if: ${{ "" == steps.build-uploader-options.outputs.reports }}
      uses: actions/github-script@v7
      with:
        script: core.warning('No report found !');
