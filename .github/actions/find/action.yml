name: TODO
description: TODO
inputs:
  from:
    description: A group directory or a glob pattern in order to find group directories and merge their metadata
    required: false
  format:
    description: string, json
    required: false
    default: string
  glue-string:
    description: String used to concatenate values when 'string' format is used
    required: false
    default: ','
  follow-symbolic-links:
    description: |
      Indicates whether to follow symbolic links when resolving `from`
    default: 'true'
outputs:
  list:
    description: |
      List of group paths separated by `glue-string` with `string` format. Or a JSON encoded list with `json` format
    value: ${{ steps.build-outputs.outputs.list }}

runs:
  using: "composite"
  steps:
    - name: Make action inputs available for actions/github-script scripts
      uses: actions/github-script@v7
      env:
        INPUT_MAP: ${{ toJson(inputs) }}
      with:
        script: |
          Object.entries(JSON.parse(process.env.INPUT_MAP)).forEach(([key, value]) => {
            const envName = 'INPUT_' + key.replace(/ /g, '_').toUpperCase();
            core.debug(`Promote ${key} input as ${envName} env var. value='${value}'`);
            core.exportVariable(envName, value);
          });

    - id: resolve-paths
      uses: actions/github-script@v7
      env:
        ROOT_PATH: ${{ inputs.from }}
      with:
        script: |
          const {resolve: pathResolve, dirname: pathDirname, join: pathJoin} = require('path');
          const {ROOT_PATH} = process.env;
          const absWorkspace = pathResolve('.');
          
          const pattern = pathJoin(ROOT_PATH, '**', '.reports-group-metadata.json');
          core.debug('pattern: ' + pattern);
          const globber = await glob.create(pattern, {followSymbolicLinks: core.getBooleanInput('follow-symbolic-links', {required: true})});
          const result = (await globber.glob()).map(p => pathDirname(p).replace(`${absWorkspace}/`, ''));
          result.forEach(p => core.info(`Found a group at ${p}`));
          if (0 === result.length) {
            core.setFailed('Unable to retrieve any group. Something wrong most likely happened !');
          }
          
          core.setOutput('paths', JSON.stringify(result));

    - id: build-outputs
      uses: actions/github-script@v7
      env:
        PATH_LIST: ${{ steps.resolve-paths.outputs.paths }}
        FORMAT: ${{ inputs.format }}
        GLUE_STRING: ${{ inputs.glue-string }}
      with:
        script: |
          const {PATH_LIST, FORMAT, GLUE_STRING} = process.env;
          
          const result = [...JSON.parse(PATH_LIST).values()]; // .values() + spread to ensure array rather than object ....
          
          core.setOutput('list', 'json' === FORMAT ? JSON.stringify(result) : result.join(GLUE_STRING));
