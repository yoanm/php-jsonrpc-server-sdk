# To store on same repo as reports-group/codecov-uploader action if doable
name: 'Codecov report groups upload'
on:
  workflow_call:
    inputs:
      artifacts-pattern:
        required: true
        type: string
      run-id:
        description: |
          The id of the workflow run where the artifacts were uploaded from (default to current run).
          In case artefacts have been uploadded from another run, this input must be filled with original workflow !
        required: false
        default: "${{ github.run_id }}"
        type: string
    secrets:
      TOKEN:
        required: true
    outputs:
      groups:
        description: TODO
        value: ${{ jobs.prepare.outputs.list-for-output }}

jobs:
  prepare:
    name: 📮 🗃️ Prepare uploads
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
      list-for-output: ${{ steps.find-groups.outputs.list }}
    permissions:
      contents: read
      checks: write # For the check run creation !
    steps:
      # @TODO move actions to a dedicated repo and remove the checkout
      - uses: actions/checkout@v4
        with:
          path: custom-action-repo

      - uses: ./custom-action-repo/.github/actions/reports-group/attach-check-run-to-triggering-workflow-action
        with:
          name: "My custom check"
          github-token: ${{ github.token }}
          job-status: ${{ job.status }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifacts-pattern }}
          path: job-artifacts
          github-token: ${{ github.token }} # Required in order to use `run-id` parameter !
          run-id: ${{ inputs.run-id }} # Required in case workflow is executed from another run (e.g. `workflow_run`)

      - name: DEBUG artifacts
        run: |
          ls -ail job-artifacts/*
          ls -ail job-artifacts/*/*

      - name: Find groups
        id: find-groups
        uses: ./custom-action-repo/.github/actions/reports-group/find
        with:
          path: job-artifacts
          format: json

      - name: DEBUG
        run: echo '${{ toJson(steps.find-groups.outputs) }}'

      # @TODO create a reports-group/find-from-artifacts action returning a map of group name to the related artefacts
      # (alternatively, update reports-group/find to manage it, like with a `from-artifacts` ??)
      - name: Build matrix
        id: build-matrix
        uses: actions/github-script@v7
        env:
          PATH_LIST: ${{ steps.find-groups.outputs.list }}
        with:
          script: |
            const {resolve: pathResolve, join: pathJoin, sep: pathSep} = require('path');
            const {PATH_LIST} = process.env;
            const pathList = JSON.parse(PATH_LIST);
            const artifactDirectory = pathResolve('job-artifacts')
            
            const result = pathList.map(groupPath => {
              const absGroupPath = pathResolve(groupPath);
              core.debug('absGroupPath=' + JSON.stringify(absGroupPath));
              if (!absGroupPath.startsWith(artifactDirectory)) {
                core.setFailed('Something wrong there :|')
              }
              const segments = absGroupPath.replace(artifactDirectory, '').split(pathSep).filter(v => v.trim().length > 0);
              core.debug('segments=' + JSON.stringify(segments));
              
              return {artifact: segments.shift(), path: pathJoin(...segments)};
            });
            core.debug('result=' + JSON.stringify(result));
            
            core.setOutput('matrix', JSON.stringify({include: result}));

      - name: DEBUG
        run: echo '${{ toJson(steps.build-matrix.outputs) }}'

  uploads:
    name: "${{ matrix.artifact }} - ${{ matrix.path }}"
    runs-on: ubuntu-latest
    needs: [ prepare ]
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    permissions:
      contents: read
      checks: write # For the check run creation !
    steps:
      - name: DEBUG matrix
        run: echo 'matrix='"'"'${{ toJson(matrix) }}'"'"

      # Codecov uploader requires the repository to be there !
      # @TODO see if by manually filling sha/branch/pr etc, it's still required !
      - name: Checkout Repository
        uses: actions/checkout@v4

      # @TODO move actions to a dedicated repo and remove the checkout
      - uses: actions/checkout@v4
        with:
          path: custom-action-repo

      - uses: ./custom-action-repo/.github/actions/reports-group/attach-check-run-to-triggering-workflow-action
        with:
          github-token: ${{ github.token }}
          job-status: ${{ job.status }}

      - name: Download '${{ matrix.artifact }}' artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: job-artifact
          github-token: ${{ github.token }} # Required in order to use `run-id` parameter !
          run-id: ${{ inputs.run-id }} # Required in case workflow is executed from another run (e.g. `workflow_run`)

      - name: DEBUG artifacts
        run: |
          ls -ail job-artifact/*
          ls -ail job-artifact/*/*

      - name: Upload reports
        id: upload
        uses: ./custom-action-repo/.github/actions/reports-group/codecov-uploader
        with:
          path: job-artifact/${{ matrix.path }}
          token: ${{ secrets.TOKEN }}
