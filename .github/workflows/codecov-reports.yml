name: 'Codecov upload'
on:
  workflow_call:
    inputs:
      artifacts-pattern:
        required: true
        type: string
    secrets:
      TOKEN:
        required: true
    outputs:
      files:
        description: JSON array of reports sent
        value: ${{ jobs.upload.outputs.json-files }}

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      info: ${{ steps.build-metadata.outputs.info }}
      matrix: ${{ steps.build-metadata.outputs.matrix }}
      reports: ${{ steps.build-metadata.outputs.reports }}
    steps:
      # @TODO remove the checkout and fill right values directly (sha, branch, pr, etc)
      # @TODO move merge-coverage-reports-metadata action to a dedicated repo and remove the checkout
      - uses: actions/checkout@v3
        with:
          path: custom-action-repo

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifacts-pattern }}
          path: ${{ runner.temp }}/coverage-reports

      - name: Build metadata
        id: build-metadata
        uses: ./custom-action-repo/.github/actions/merge-coverage-reports-metadata
        with:
          root: ${{ runner.temp }}/coverage-reports

  upload:
    name: Upload ${{ matrix.name }} group
    runs-on: ubuntu-latest
    needs: [ prepare ]
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      # @TODO remove the checkout and fill right values directly (sha, branch, pr, etc)
      - uses: actions/checkout@v3
        with:
          path: tmp-repo

      - name: Download the artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: coverage-reports

      - name: Build metadata
        id: build-metadata
        uses: actions/github-script@v7
        env:
          PATH: ${{ matrix.path }}
          REPORTS: ${{ matrix.reports }}
          FLAGS: ${{ matrix.flags }}
        with:
          script: |
            const { PATH, REPORTS, FLAGS } = process.env;

            core.setOutput("files", JSON.parse(REPORTS).map(f => `coverage-reports/${PATH}/${f}`).join(','));
            core.setOutput("flags", JSON.parse(FLAGS).join(','));

      - name: Upload group reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.TOKEN }}
          name: ${{ matrix.name }}
          files: ${{ steps.build-metadata.outputs.files }}
          flags: ${{ steps.build-metadata.outputs.flags }}
          root_dir: tmp-repo
          disable_search: true
          fail_ci_if_error: true
          verbose: ${{ runner.debug == '1' }}
