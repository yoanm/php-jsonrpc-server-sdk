name: 'Codacy upload'
on:
  workflow_call:
    inputs:
      artifacts-pattern:
        required: true
        type: string
    secrets:
      PROJECT_TOKEN:
        required: true

jobs:
  prepare:
    name: Upload all reports
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.build-metadata.outputs.files }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifacts-pattern }}
          path: coverage-reports

      - name: Build metadata
        id: build-metadata
        uses: actions/github-script@v7
        with:
          script: |
            const {resolve: pathResolve} = require('path');
            const absoluteRoot = pathResolve('./coverage-reports');

            let stdout = '';
            let stderr = '';

            const options = {
              listeners: {
                stdout: (data: Buffer) => {
                  stdout += data.toString();
                },
                stderr: (data: Buffer) => {
                  stderr += data.toString();
                }
              },
            };

            const globber = await glob.create(`${absoluteRoot}/**/report-*`);
            const reportList = (await globber.glob()).map(fp => fp.replace(`${absoluteRoot}/`, ''));
            core.debug(`find stdout='${stdout}'`);
            core.debug(`find stderr='${stderr}'`);
            if (stderr.length > 0) {
              core.error(stderr)
              core.setFailed('Error during find execution !');
            }

            core.setOutput("files", stdout.split("\n").join(','));

      - name: Upload reports
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          coverage-reports: ${{ steps.build-metadata.outputs.files }}
          project-token: ${{ secrets.PROJECT_TOKEN }}
